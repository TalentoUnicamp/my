{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Pref",
				"PrefetchModelSerializer\tclass"
			],
			[
				"res",
				"rest_framework\tmodule"
			],
			[
				"on",
				"on_delete\tparam"
			],
			[
				"defa",
				"defaultItems"
			],
			[
				"Vue",
				"VueCookie"
			],
			[
				"ite",
				"items"
			],
			[
				"in",
				"input\tTag"
			],
			[
				"delet",
				"deleteItem"
			],
			[
				"com",
				"company_data"
			],
			[
				"new",
				"newCompanyAccess"
			],
			[
				"Em",
				"EmployeeHasAccess\tclass"
			],
			[
				"is",
				"is_employee\tstatement"
			],
			[
				"Is",
				"IsEmployeeMixin\tclass"
			],
			[
				"Me",
				"MessagePackRenderer\tclass"
			],
			[
				"M",
				"MessagePackRenderer\tclass"
			],
			[
				"ex",
				"ExportMixin\tclass"
			],
			[
				"dow",
				"download_url"
			],
			[
				"down",
				"downloadAs"
			],
			[
				"form",
				"format"
			],
			[
				"Not",
				"NotNestedTSVRenderer\tclass"
			],
			[
				"for",
				"format\tfunction"
			],
			[
				"B",
				"BrowsableAPIRenderer\tclass"
			],
			[
				"rend",
				"renderer_context\tparam"
			],
			[
				"ren",
				"renderer_context\tparam"
			],
			[
				"No",
				"NotNestedCSVRenderer\tclass"
			],
			[
				"get_ser",
				"get_serializer_context\tfunction"
			],
			[
				"e",
				"export_serializers\tmodule"
			],
			[
				"re",
				"renderers\tmodule"
			],
			[
				"expo",
				"exportCSV"
			],
			[
				"ser",
				"serializer_class\tstatement"
			],
			[
				"Ex",
				"ExportScannedHackersSerializer\tclass"
			],
			[
				"get_sri",
				"get_serializer_context\tfunction"
			],
			[
				"Exp",
				"ExportScanSerializer\tclass"
			],
			[
				"Ser",
				"SerializerMethodField\tclass"
			],
			[
				"app",
				"application\tmodule"
			],
			[
				"esca",
				"escaneador_email\tstatement"
			],
			[
				"mde",
				"model"
			],
			[
				"Mode",
				"ModelSerializer\tclass"
			],
			[
				"sc",
				"scannee_full_name"
			],
			[
				"butt",
				"button"
			],
			[
				"sca",
				"scanIdx"
			],
			[
				"rat",
				"rating"
			],
			[
				"ra",
				"rateComponent"
			],
			[
				"rate",
				"rateInstance"
			],
			[
				"tex",
				"text-align\tproperty"
			],
			[
				"as",
				"askRating"
			],
			[
				"U",
				"UpdateModelMixin\tclass"
			],
			[
				"def",
				"default\tparam"
			],
			[
				"scan",
				"scanList"
			],
			[
				"Sca",
				"ScanList"
			],
			[
				"Esc",
				"Escaneados"
			],
			[
				"uni",
				"unique_id"
			],
			[
				"un",
				"unique_id"
			],
			[
				"Scan",
				"ScanViewset\tclass"
			],
			[
				"gene",
				"GenericViewSet\tclass"
			],
			[
				"view",
				"viewsets\tmodule"
			],
			[
				"sta",
				"status\tparam"
			],
			[
				"ad",
				"admit\tfunction"
			],
			[
				"get",
				"get_object_or_404\tfunction"
			],
			[
				"u",
				"useridx"
			],
			[
				"ap",
				"applicationData"
			],
			[
				"vie",
				"view_application"
			],
			[
				"ui",
				"unique_id"
			],
			[
				"f",
				"f\tAnonymous Function"
			],
			[
				"refre",
				"refreshCalendars"
			],
			[
				"df",
				"_default_hacker"
			],
			[
				"_de",
				"_default_staff"
			],
			[
				"hac",
				"hackathon_end"
			],
			[
				"regis",
				"registration_close"
			],
			[
				"reg",
				"registration_open"
			],
			[
				"sett",
				"settings_context"
			],
			[
				"fiel",
				"Field"
			],
			[
				"field",
				"field_value\tstatement"
			],
			[
				"mii",
				"mixin"
			],
			[
				"set",
				"settings_subscriptions"
			],
			[
				"Lo",
				"LoginRequiredMixin\tclass"
			],
			[
				"upda",
				"updateOnList"
			],
			[
				"fun",
				"fun\tFunction"
			],
			[
				"id",
				"id_field"
			],
			[
				"em",
				"employee"
			],
			[
				"togg",
				"toggleAll"
			],
			[
				"sele",
				"selectAll"
			],
			[
				"sle",
				"selectedCompany"
			],
			[
				"find",
				"findIndex"
			],
			[
				"fu",
				"fun\tFunction"
			],
			[
				"cehc",
				"checkinited"
			],
			[
				"ce",
				"checkinited"
			],
			[
				"co",
				"console"
			],
			[
				"user",
				"userList"
			],
			[
				"comp",
				"companyCreated"
			],
			[
				"C",
				"Company"
			],
			[
				"val",
				"value\tstatement"
			],
			[
				"vali",
				"validate_unique_id"
			],
			[
				"va",
				"validate_company_id"
			],
			[
				"Des",
				"DestroyModelMixin\tclass"
			],
			[
				"cp",
				"company_name"
			],
			[
				"fet",
				"FetchScanHacker\tclass"
			],
			[
				"che",
				"checkedin"
			],
			[
				"chec",
				"check-in"
			],
			[
				"s",
				"scanner\tstatement"
			],
			[
				"rou",
				"router\tstatement"
			],
			[
				"per",
				"permission_classes\tstatement"
			],
			[
				"Re",
				"IsAuthenticatedOrReadOnly\tclass"
			],
			[
				"gn",
				"GenericAPIView\tclass"
			],
			[
				"Ie",
				"IsEmployeeMixin\tclass"
			],
			[
				"scann",
				"scanner"
			],
			[
				"msoc",
				"msocks_fields"
			],
			[
				"mso",
				"msocks_allow"
			],
			[
				"auto",
				"auto_now_add\tparam"
			],
			[
				"man",
				"manualCode"
			],
			[
				"max",
				"max-width\tproperty"
			],
			[
				"came",
				"cameraMode"
			],
			[
				"cam",
				"cameraWidth"
			],
			[
				"rel",
				"reloadCamera"
			],
			[
				"sto",
				"stopCamera"
			],
			[
				"camera",
				"cameraContainer"
			],
			[
				"scre",
				"screen_w"
			],
			[
				"min",
				"min_h"
			],
			[
				"pro",
				"promise"
			],
			[
				"de",
				"decodedString"
			],
			[
				"le",
				"length"
			],
			[
				"toke",
				"token"
			],
			[
				"tok",
				"tokenCopied"
			],
			[
				"logi",
				"loginUrl"
			],
			[
				"cop",
				"copyTextToClipboard"
			],
			[
				"to",
				"tokenText"
			],
			[
				"url",
				"urlText"
			],
			[
				"ur",
				"urlCopied"
			]
		]
	},
	"buffers":
	[
		{
			"file": "user_profile/serializers.py",
			"settings":
			{
				"buffer_size": 812,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/Maronato/Downloads/client_id.json",
			"settings":
			{
				"buffer_size": 353,
				"line_ending": "Unix"
			}
		},
		{
			"file": "project/serializers.py",
			"settings":
			{
				"buffer_size": 614,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "company/serializers.py",
			"settings":
			{
				"buffer_size": 2542,
				"line_ending": "Unix"
			}
		},
		{
			"file": "user_profile/api.py",
			"settings":
			{
				"buffer_size": 3947,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from django.db import models\nfrom django.utils.crypto import get_random_string\nfrom django.db.models.signals import post_save\nfrom django.conf import settings\nfrom django.contrib.auth.models import User\n\nimport re\n\nfrom .tasks import send_verify_email\n# Create your models here.\n\n\ndef gen_token():\n    TOKEN_SIZE = settings.TOKEN_SIZE\n    token = get_random_string(length=TOKEN_SIZE)\n    return token\n\n\ndef gen_verification_code():\n    TOKEN_SIZE = settings.TOKEN_SIZE\n    verification_code = get_random_string(length=TOKEN_SIZE)\n    return verification_code\n\n\ndef gen_unique_id():\n    TOKEN_SIZE = settings.TOKEN_SIZE\n    unique_id = get_random_string(length=TOKEN_SIZE)\n    return unique_id\n\n\nclass Profile(models.Model):\n    # Fields to subscribe to\n\n    # Subscription permissions\n    msocks_allow = True\n    msocks_fields = ['unique_id', 'full_name', 'email', 'state', 'is_verified', 'is_hacker', 'is_staff', 'is_admin', 'is_employee', 'has_facebook', 'has_github', 'has_google']\n\n    user = models.OneToOneField(\n        User,\n        on_delete=models.CASCADE\n    )\n\n    # Public unique ID\n    unique_id = models.CharField(max_length=20, unique=True, default=gen_unique_id)\n\n    # Log in token\n    token = models.CharField(max_length=20, unique=True, default=gen_token)\n\n    # Email verification\n    verified = models.BooleanField(default=False)\n    verification_code = models.CharField(max_length=20, unique=True, default=gen_verification_code)\n\n    @property\n    def is_verified(self):\n        \"\"\"Profile's email is verified and ready to use\"\"\"\n        temp_email = re.match(r'^temp_\\d+@email.com$', self.user.email)\n        return self.verified and temp_email is None\n\n    @property\n    def state(self):\n        if self.is_hacker and self.hacker.hacker_state == 'incomplete':\n            return 'incomplete'\n        if not self.is_verified:\n            return 'unverified'\n        if self.is_hacker:\n            return self.hacker.hacker_state\n        return 'verified'\n\n    # Update attribute\n    # Used so that changes in other models can trigger sockets\n    _update_field = models.BooleanField(default=False)\n\n    def trigger_update(self):\n        \"\"\"Trigger Update\n        Used to manually trigger signal updates on this model\n        \"\"\"\n        post_save.send(Profile, instance=self, created=False)\n\n    # Social logins\n    @property\n    def has_facebook(self):\n        return self.social_logins.filter(provider='facebook').exists()\n\n    @property\n    def has_github(self):\n        return self.social_logins.filter(provider='github').exists()\n\n    @property\n    def has_google(self):\n        return self.social_logins.filter(provider='google').exists()\n\n    # Hacker and staff attributes\n    @property\n    def is_hacker(self):\n        return hasattr(self, 'hacker')\n\n    @property\n    def is_staff(self):\n        return hasattr(self, 'staff')\n\n    @property\n    def is_admin(self):\n        return self.user.is_superuser\n\n    @property\n    def is_employee(self):\n        return hasattr(self, 'employee')\n\n    @property\n    def full_name(self):\n        return self.user.get_full_name()\n\n    @property\n    def email(self):\n        return self.user.email\n\n    # Methods\n    def new_token(self):\n        self.token = gen_token()\n        self.save()\n        return self.token\n\n    def new_verification_code(self):\n        self.verification_code = gen_verification_code()\n        self.save()\n        return self.verification_code\n\n    def change_email(self, email):\n        user = self.user\n        user.email = email\n        user.save()\n        self.verified = False\n        self.new_verification_code()\n        send_verify_email.delay(self.id)\n\n    def verify_email(self):\n        self.verified = True\n        self.save()\n        self.new_verification_code()\n\n    def unlink_social_provider(self, provider):\n        social = self.social_logins.filter(provider=provider)\n        if social.exists():\n            social.first().delete()\n\n    def __str__(self):\n        return f\"{self.user.get_full_name()} ({self.user.email})\"\n\n\ndef create_profile(sender, **kwargs):\n    user = kwargs['instance']\n    if kwargs['created']:\n        profile = Profile(user=user)\n        profile.save()\n    # Trigger profile update on user update\n    else:\n        if hasattr(user, 'profile'):\n            user.profile.trigger_update()\n\n\npost_save.connect(create_profile, sender=User)\n\n\nclass Shortcuts(models.Model):\n    profile = models.OneToOneField(\n        Profile,\n        on_delete=models.CASCADE\n    )\n    # Social logins\n    @property\n    def has_facebook(self):\n        return self.social_logins.filter(provider='facebook').exists()\n\n    @property\n    def has_github(self):\n        return self.social_logins.filter(provider='github').exists()\n\n    @property\n    def has_google(self):\n        return self.social_logins.filter(provider='google').exists()\n\n    # Hacker and staff attributes\n    @property\n    def is_hacker(self):\n        return hasattr(self, 'hacker')\n\n    @property\n    def is_staff(self):\n        return hasattr(self, 'staff')\n\n    @property\n    def is_admin(self):\n        return self.user.is_superuser\n\n    @property\n    def is_employee(self):\n        return hasattr(self, 'employee')\n",
			"file": "user_profile/models.py",
			"file_size": 4497,
			"file_write_time": 131766677900845241,
			"settings":
			{
				"buffer_size": 5200,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"reset",
				"Git: Reset (hard) HEAD"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"lint",
				"SublimeLinter: Show Line Errors"
			],
			[
				"pret",
				"JsPrettier: Format Code"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"pre",
				"JsPrettier: Format Code"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"linter",
				"SublimeLinter: Show All Errors"
			],
			[
				"lin",
				"SublimeLinter: Lint This View"
			],
			[
				"li",
				"SublimeLinter: Lint This View"
			],
			[
				"j",
				"JsPrettier: Format Code"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"re",
				"Indentation: Reindent Lines"
			],
			[
				"r",
				"Indentation: Reindent Lines"
			],
			[
				"stash",
				"Git: Stash Changes"
			],
			[
				"rest",
				"Git: Reset (hard) HEAD"
			],
			[
				"pus",
				"Git: Push"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add All"
			],
			[
				"co",
				"Git: Commit"
			],
			[
				"Pus",
				"Git: Push"
			],
			[
				"con",
				"Convert Case: Lower Case"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"staus",
				"Git: Status"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"log",
				"Git: Log All"
			],
			[
				"pu",
				"Git: Push"
			],
			[
				"diff",
				"Git: Diff All Files"
			],
			[
				"uns",
				"Git: Reset (unstage) All"
			],
			[
				"unsta",
				"Git: Reset (unstage) All"
			],
			[
				"git re",
				"Git: Reset (unstage) All"
			],
			[
				"rese",
				"Git: Reset (unstage) All"
			],
			[
				"ad",
				"Git: Add Current File"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"un",
				"Git: Reset (unstage) All"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"git",
				"Git: Reset (hard) HEAD"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"md",
				"Markdown Preview: Preview in Browser"
			],
			[
				"pep",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"res",
				"Git: Reset (unstage) All"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"inde",
				"Indexing Status"
			],
			[
				"mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"unst",
				"Git: Reset (unstage) All"
			],
			[
				"pe",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"sta",
				"Indexing Status"
			],
			[
				"pul",
				"Git: Pull"
			],
			[
				"st",
				"Git: Status"
			],
			[
				"hist",
				"Git: Commit history"
			],
			[
				"Pu",
				"Git: Push"
			],
			[
				"tod",
				"TodoReview: Open Files"
			],
			[
				"todo",
				"TodoReview: Open Files"
			],
			[
				"REIN",
				"Indentation: Reindent Lines"
			],
			[
				"init",
				"Git: Init"
			],
			[
				"sts",
				"Set Syntax: Tcl"
			],
			[
				"in",
				"Indentation: Reindent Lines"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"dif",
				"Git: Diff All Files"
			],
			[
				"lo",
				"Git: Log Current File"
			],
			[
				"i",
				"Indentation: Reindent Lines"
			],
			[
				"pacage",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"l",
				"Git: Log Current File"
			],
			[
				"ana",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"us",
				"LaTeXTools: Reset user settings to default"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"a",
				"Git: Add All"
			],
			[
				"pep8",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"ocm",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"gi",
				"Git: Add All"
			],
			[
				"statu",
				"Git: Status"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"PU",
				"Git: Push"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"cha",
				"Git: Change Branch"
			],
			[
				"ch",
				"Git: Change Branch"
			],
			[
				"chan",
				"Git: Change Branch"
			],
			[
				"mer",
				"Git: Merge Branch"
			],
			[
				"bra",
				"Git: Change Branch"
			],
			[
				"amme",
				"Git: Amend Commit"
			],
			[
				"c",
				"Git: Change Branch"
			],
			[
				"chang",
				"Git: Change Branch"
			],
			[
				"bran",
				"Git: Change Branch"
			],
			[
				"previ",
				"Markdown Preview: Preview in Browser"
			],
			[
				"dig",
				"Git: Diff All Files (Ignore Whitespace)"
			],
			[
				"add ",
				"Git: Add Current File"
			],
			[
				"bu",
				"Build With: LaTeX"
			],
			[
				"bui",
				"Build With: LaTeX"
			],
			[
				"latex",
				"LaTeXTools: Delete temporary files"
			],
			[
				"buid",
				"Build With: LaTeX"
			],
			[
				"pdf",
				"LaTeXTools: View PDF"
			]
		],
		"width": 472.0
	},
	"console":
	{
		"height": 726.0,
		"history":
		[
			"python",
			"exit()",
			"ls",
			"python",
			"pythpn",
			"ls",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Maronato/Documents/learning_vue/future_quill",
		"/Users/Maronato/Documents/learning_vue/future_quill/company",
		"/Users/Maronato/Documents/learning_vue/future_quill/project",
		"/Users/Maronato/Documents/learning_vue/future_quill/settings",
		"/Users/Maronato/Documents/learning_vue/future_quill/user_profile"
	],
	"file_history":
	[
		"/Users/Maronato/pyenvs/_Users_Maronato_Documents_learning_vue_future_quill/venv/lib/python3.6/site-packages/rest_framework/serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/mixins.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/user_profile/api.py",
		"/Users/Maronato/pyenvs/_Users_Maronato_Documents_learning_vue_future_quill/venv/lib/python3.6/site-packages/rest_framework/generics.py",
		"/Users/Maronato/pyenvs/_Users_Maronato_Documents_learning_vue_future_quill/venv/lib/python3.6/site-packages/rest_framework/mixins.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/.env",
		"/Users/Maronato/Documents/learning_vue/future_quill/settings/api.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/user_profile/urls.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/user_profile/serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/urls.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/settings/models.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/settings.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/dashboard/views.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/settings/mixins.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/templates/project/base.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/templates/project/root.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/subscriptions/base.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/requirements.txt",
		"/Users/Maronato/Documents/learning_vue/future_quill/dashboard/templates/dashboard/dashboard.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/static/model_sockets/js/subscription.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/router_application.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/models.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_custom.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_login.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/app.json",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/apps.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/Procfile",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/asgi.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/run.sh",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/templates/company/company.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/templates/godmode/admin.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_sidebar.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/components/login/login.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/package.json",
		"/Users/Maronato/Documents/learning_vue/future_quill/bin/run_compress",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/plugins/semantic/node_modules/less/test/css/urls.css",
		"/Users/Maronato/Documents/learning_vue/future_quill/dashboard/static/dashboard/components/dashboard/dashboard.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/dashboard/static/dashboard/components/sections/reminders.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/company/company_table.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/company.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/dashboard/static/dashboard/components/sections/reminder_item.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/dashboard/static/dashboard/apps/dashboard.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/components/sidebar/sidebar.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/mixins.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/exports.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/api.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/permissions.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/views.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/components/extra/download_button.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/renderers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/static/company/components/company.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/static/company/components/sections/scan_list.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/company/user_table.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/list/user_table.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/application/serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/export_serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/user_profile/export_serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/export_serializers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/application/export_serializers.py",
		"/Users/Maronato/pyenvs/_Users_Maronato_Documents_learning_vue_future_quill/venv/lib/python3.6/site-packages/rest_framework/renderers.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/urls.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/api.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/static/company/components/sections/hacker_rate.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/static/company/components/sections/scan.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/mixins.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/user_profile/models.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/urls.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/api.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/plugins/tablesort/tablesort.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/js/settings_subscriptions.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/list.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/application/api.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/permissions.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/urls.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/static/staff/components/sections/hacker_table.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/models.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/static/staff/components/sections/list.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/hacker/emails.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/mixins.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/application/urls.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/apps/settings_subs.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/settings.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/admin.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/company/employee_table.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/templates/staff/staff.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/application/templates/application/application.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/plugins/semantic/js/modules/popup.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/apps/admin.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_animation.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_application.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_base.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_branding.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_dashboard.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_page.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_staff.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_team.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_verify.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/normalize.css",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/site.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/js/axios_csrf.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/js/notifications.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/js/notify_messages.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/js/self_subscriptions.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/templates/project/email/action/html.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/templates/project/email/action/style.css",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/templates/project/email/basic/html.html",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/templates/project/email/basic/style.css",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/static/staff/apps/staff.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/static/staff/components/sections/checkin.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/static/staff/components/sections/register.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/staff/static/staff/components/staff.vue",
		"/Users/Maronato/Library/Application Support/Sublime Text 3/Packages/Terminal/Terminal.sublime-settings",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/css/_admin.scss",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/components/sidebar/item.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/apps/sidebar.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/apps/self_subs.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/project/static/project/apps/login.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/static/model_sockets/js/ws_wrapper.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/static/model_sockets/js/msocks.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/static/model_sockets/js/msocks_bkp.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/model_sockets/static/model_sockets/js/reconnecting-websocket.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/godmode/static/godmode/components/sections/create_users.vue",
		"/Users/Maronato/Documents/learning_vue/future_quill/company/static/company/apps/company.js",
		"/Users/Maronato/Documents/learning_vue/future_quill/application/views.py",
		"/Users/Maronato/Documents/learning_vue/future_quill/.eslintrc.json",
		"/Users/Maronato/Documents/learning_vue/future_quill/social/models.py"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 322.0,
		"where_history":
		[
			"<project>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Response",
			".get()",
			"djdt",
			"compress",
			"staticf",
			"logo",
			"content",
			"rest",
			"data-sort-value",
			"button",
			"buttom",
			"index",
			"node",
			".uni",
			"map",
			"reload",
			"conso",
			"cons",
			"consolo",
			"scop",
			"scope",
			"json",
			"conso",
			"export",
			"dispat",
			"fields",
			"field",
			"admin",
			"export",
			"seman",
			"face",
			"setti",
			"is_h",
			"email",
			"tok",
			".get()",
			"drop",
			"save",
			"hackers",
			"messa",
			"automatically",
			"todo",
			"_",
			"_m",
			"_d",
			"is_hacker",
			"add_to_class",
			"background: rg",
			"backg",
			"opacit",
			"cons",
			"prin",
			"retrieveMo",
			"retrieve",
			"icon",
			"ico",
			"img"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			".get(settings)",
			"",
			"d"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "user_profile/serializers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 812,
						"regions":
						{
						},
						"selection":
						[
							[
								236,
								236
							],
							[
								303,
								303
							],
							[
								368,
								368
							],
							[
								545,
								545
							],
							[
								572,
								572
							],
							[
								595,
								595
							]
						],
						"settings":
						{
							"SL.579.region_keys":
							[
							],
							"auto_complete_triggers":
							[
								{
									"characters": ".>:",
									"selector": "source.c++ - string - comment - constant.numeric"
								},
								{
									"characters": ".>:",
									"selector": "source.c - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.objc++ - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.objc - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.cuda-c++ - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										604,
										605
									],
									"2":
									[
										604,
										605
									],
									"3":
									[
										604,
										605
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									],
									"3":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										491,
										492
									],
									"2":
									[
										491,
										492
									],
									"3":
									[
										491,
										492
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/Maronato/Downloads/client_id.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 353,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										352,
										353
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 2035.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "project/serializers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 614,
						"regions":
						{
						},
						"selection":
						[
							[
								259,
								259
							]
						],
						"settings":
						{
							"SL.594.region_keys":
							[
							],
							"auto_complete_triggers":
							[
								{
									"characters": ".>:",
									"selector": "source.c++ - string - comment - constant.numeric"
								},
								{
									"characters": ".>:",
									"selector": "source.c - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.objc++ - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.objc - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.cuda-c++ - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										347,
										348
									],
									"2":
									[
										408,
										409
									],
									"3":
									[
										484,
										485
									],
									"4":
									[
										536,
										537
									],
									"5":
									[
										617,
										618
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"2":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"3":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"4":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									],
									"5":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										317,
										318
									],
									"2":
									[
										367,
										368
									],
									"3":
									[
										456,
										457
									],
									"4":
									[
										504,
										505
									],
									"5":
									[
										587,
										588
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "company/serializers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2542,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 230.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "user_profile/api.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3947,
						"regions":
						{
						},
						"selection":
						[
							[
								2271,
								2271
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2270,
										2271
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2238,
										2239
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1863.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "user_profile/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5200,
						"regions":
						{
						},
						"selection":
						[
							[
								5199,
								5199
							]
						],
						"settings":
						{
							"SL.586.region_keys":
							[
							],
							"auto_complete_triggers":
							[
								{
									"characters": ".>:",
									"selector": "source.c++ - string - comment - constant.numeric"
								},
								{
									"characters": ".>:",
									"selector": "source.c - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.objc++ - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.objc - string - comment - constant.numeric"
								},
								{
									"characters": ".>: ",
									"selector": "source.cuda-c++ - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										2552,
										2553
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2541,
										2542
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5198,
										5199
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										5181,
										5182
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4299.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 136.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 155.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 186.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 192.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/C.sublime-build",
	"project": "future_quill.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"staff/templates/staff/staff.html"
			],
			[
				"com",
				"main/static/main/css/semantic-ui/components/comment.css"
			],
			[
				"us",
				"venv/lib/python2.7/encodings/utf_8_sig.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/SpottedAPI/SpottedAPI.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 296.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
